version: "3.9"
volumes:
  postgres:
  mongo:
  minio:
  redisinsights:
services:
  rabbit:
    image: "rabbitmq:3.9-management-alpine"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: mqadmin
      RABBITMQ_DEFAULT_PASS: 123456
  redis:
    image: "redis:6-alpine"
    ports:
      - "6379:6379"
    environment:
      MASTER: true
  redisinsights:
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    volumes:
      - redisinsights:/data/db
  mongo:
    image: "mongo:5.0.8"
#    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
    volumes:
      - mongo:/data/db
  postgres:
    image: "postgres:14.5-alpine"
#    restart: always
    ports:
      - "5431:5432"
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      PGDATA: /data/pgdata
    volumes:
      - postgres:/data/pgdata
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - 22181:2181
  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
  minio:
    image: minio/minio
    ports:
      - "5430:5430"
      - "9009:9009"
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: miniouser
      MINIO_ROOT_PASSWORD: miniopassword
    command: server --console-address ":9009" /data
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=123
#  prometheus:
#    image: prom/prometheus
#    ports:
#      - 9090:9090
#    volumes:
#      - ./.deploy/docker/config/prometheus.yml:/etc/prometheus/prometheus.yml
