server.port=8888
#http://localhost:8888/sc/default/latest

#Без активации профиля работать не будет
spring.profiles.active=jdbc
spring.cloud.config.server.jdbc.sql=SELECT P.KEY, P.VALUE FROM CLOUD.PROPERTIES P WHERE P.APPLICATION=? AND P.PROFILE=? AND P.LABEL=?
spring.cloud.config.server.bootstrap=false
#spring.cloud.config.server.jdbc.enabled=true

#Приложение завершится с ошибкой, если не удастся загрузить конфигурацию
spring.cloud.config.fail-fast=true

spring.cloud.bus.enabled=true
spring.cloud.bus.id=sc-config-app-local
spring.cloud.bus.destination=sc.config.bus

spring.cloud.stream.kafka.binder.brokers=host.docker.internal:9092
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.configuration.security.protocol=PLAINTEXT

#spring.datasource.url=jdbc:postgresql://host.docker.internal:5431/test_db?currentSchema=cloud
spring.datasource.url=jdbc:postgresql://host.docker.internal:5431/test_db
spring.datasource.username=test
spring.datasource.password=test
spring.datasource.hikari.schema=cloud

spring.jpa.open-in-view=false

#management.metrics.export.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
management.endpoints.web.exposure.include=health.prometheus.info

#spring.flyway.enabled=true
#spring.flyway.locations=classpath:db/migration
#spring.flyway.baseline-on-migrate=true
#spring.flyway.schemas=cloud